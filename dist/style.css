@font-face {
  font-family: system;
  font-style: normal;
  font-weight: 300;
  src: local(".SFNSText-Light"), local(".HelveticaNeueDeskInterface-Light"), local(".LucidaGrandeUI"), local("Ubuntu Light"), local("Segoe UI Light"), local("Roboto-Light"), local("DroidSans"), local("Tahoma");
}
* {
  box-sizing: border-box;
}

body {
  font-family: system-ui, "system";
  color: #262628;
  font-size: 13pt;
  margin: 0;
  padding: 0;
}

hr {
  border: 1px solid rgba(38, 38, 40, 0.23);
}

h1, h2, h3, h4, h5, h6 {
  color: #19293a;
  margin: 1.33rem 0;
}

h1 {
  font-size: 29pt;
}

h2 {
  font-size: 23pt;
}

h3 {
  font-size: 19pt;
}

h4 {
  font-size: 17pt;
}

h5 {
  font-size: 16pt;
}

h6 {
  font-size: 15pt;
}

a {
  color: #3566aa;
}

a:hover {
  color: #294f83;
}

a:focus {
  background-color: #eee82b;
  color: #19293a;
  box-shadow: 0 4px 0 0 #19293a;
  text-decoration: none;
  outline: none;
  border-radius: 0;
}

del {
  color: #a33239;
  background-color: #f2f2f2;
}

ins {
  color: #367724;
  background-color: #f2f2f2;
}

kbd {
  background-color: #f2f2f2;
  padding: 1px 2px;
  border: 0.66px solid #cccccc;
  border-radius: 2px;
}

code {
  background-color: #19293a;
  color: #e7e374;
  padding: 1px 2px;
  border: 0.66px solid #262628;
  border-radius: 3px;
}

var {
  font-family: monospace;
  color: #9e3037;
  font-style: normal;
}

q {
  font-style: oblique;
  opacity: 0.975;
}

blockquote {
  border-left: 5px solid #eaeaea;
  padding: 0.33rem 2rem;
  margin-left: 0;
  background-color: #fafafa;
}

fieldset {
  border: none;
  padding: 0;
}
fieldset legend {
  font-weight: 500;
}

label {
  display: block;
  margin-bottom: 0.66em;
}

input, .input, textarea {
  font-size: 14pt;
  padding: 6px;
  border-radius: 0;
  border: 2px solid #262628;
  outline: none;
}
input[data-width="2"], .input[data-width="2"], textarea[data-width="2"] {
  width: 5.4ex;
}
input[data-width="3"], .input[data-width="3"], textarea[data-width="3"] {
  width: 7.2ex;
}
input[data-width="4"], .input[data-width="4"], textarea[data-width="4"] {
  width: 9ex;
}
input[data-width="5"], .input[data-width="5"], textarea[data-width="5"] {
  width: 10.8ex;
}
input[data-width="10"], .input[data-width="10"], textarea[data-width="10"] {
  width: 23ex;
}
input[data-width="20"], .input[data-width="20"], textarea[data-width="20"] {
  width: 41ex;
}
input[data-width=full], .input[data-width=full], textarea[data-width=full] {
  width: 100%;
}

textarea {
  font-family: system-ui, "system";
  font-size: 12pt;
}

input::placeholder, .input *::placeholder, textarea::placeholder {
  color: #636363;
  font-weight: 200;
  font-family: system-ui, "system";
}

input:focus, .input:focus-within, textarea:focus {
  border-radius: 0;
  box-shadow: 0 0 0 1px inset #262628, 0 0 0 3px #eee82b;
}

input[type=color] {
  min-height: 2em;
  padding: 0;
}

select {
  border-radius: 0;
  outline: none;
  font-size: 14pt;
  padding: 6px;
  border: 2px solid #262628;
  font-family: system-ui, "system";
}

select:focus {
  box-shadow: 0 0 0 1px inset #262628, 0 0 0 3px #eee82b;
}

button, .button, input[type=button], input[type=reset], input[type=submit] {
  border-radius: 0;
  outline: none;
  font-size: 14pt;
  border: none;
  border-bottom: 2px solid rgba(0, 0, 0, 0.21);
  padding: 8px 10px 7px;
  color: #262628;
  text-decoration: none;
  background-color: #f2f2f2;
  color: rgba(0, 0, 0, 0.76);
}
button:hover, .button:hover, input[type=button]:hover, input[type=reset]:hover, input[type=submit]:hover {
  cursor: pointer;
  background-color: #dfdfdf;
}
button.color-red, .button.color-red, input[type=button].color-red, input[type=reset].color-red, input[type=submit].color-red {
  background-color: #bd3a42;
  color: rgba(255, 255, 255, 0.76);
}
button.color-red:hover, .button.color-red:hover, input[type=button].color-red:hover, input[type=reset].color-red:hover, input[type=submit].color-red:hover {
  background-color: #922d33;
}
button.color-green, .button.color-green, input[type=button].color-green, input[type=reset].color-green, input[type=submit].color-green {
  background-color: #4daa34;
  color: rgba(255, 255, 255, 0.76);
}
button.color-green:hover, .button.color-green:hover, input[type=button].color-green:hover, input[type=reset].color-green:hover, input[type=submit].color-green:hover {
  background-color: #3a7f27;
}
button.color-blue, .button.color-blue, input[type=button].color-blue, input[type=reset].color-blue, input[type=submit].color-blue {
  background-color: #3566aa;
  color: rgba(255, 255, 255, 0.76);
}
button.color-blue:hover, .button.color-blue:hover, input[type=button].color-blue:hover, input[type=reset].color-blue:hover, input[type=submit].color-blue:hover {
  background-color: #284c7f;
}
button.color-yellow, .button.color-yellow, input[type=button].color-yellow, input[type=reset].color-yellow, input[type=submit].color-yellow {
  background-color: #ddd83c;
  color: rgba(0, 0, 0, 0.76);
}
button.color-yellow:hover, .button.color-yellow:hover, input[type=button].color-yellow:hover, input[type=reset].color-yellow:hover, input[type=submit].color-yellow:hover {
  background-color: #c0bb21;
}
button.color-primary, .button.color-primary, input[type=button].color-primary, input[type=reset].color-primary, input[type=submit].color-primary {
  background-color: #0ff0c3;
  color: rgba(0, 0, 0, 0.76);
}
button.color-primary:hover, .button.color-primary:hover, input[type=button].color-primary:hover, input[type=reset].color-primary:hover, input[type=submit].color-primary:hover {
  background-color: #0cbb98;
}
button:active, .button:active, input[type=button]:active, input[type=reset]:active, input[type=submit]:active {
  box-shadow: 0 0 0 3px inset #eee82b;
  border: none;
  transform: translateY(2px);
}
button:focus, button[type=file]:focus-within, .button:focus, .button[type=file]:focus-within, input[type=button]:focus, input[type=button][type=file]:focus-within, input[type=reset]:focus, input[type=reset][type=file]:focus-within, input[type=submit]:focus, input[type=submit][type=file]:focus-within {
  background-color: #eee82b;
  box-shadow: 0 2px 0 0 #19293a;
  border-bottom: none;
  color: #19293a;
}

table {
  border-collapse: collapse;
  margin: 1rem 0 3rem;
}
table caption {
  font-weight: 500;
  text-align: left;
}
table tr {
  border-bottom: 1px solid #b4b4b8;
}
table th {
  text-align: left;
}
table td, table th {
  padding: 0.75rem 0.45rem;
}
table td:first-child, table th:first-child {
  padding-left: 0;
}

dl dt {
  font-weight: 500;
}
dl dd ~ dt {
  margin-top: 0.89rem;
}
dl dd {
  margin-bottom: 0.44rem;
}

ul li, ol li {
  margin: 0.56rem 0;
}

.tg-flex {
  display: flex;
}

span.tg-checkbox {
  display: inline-block;
}

.tg-checkbox {
  margin: 0.65rem 1rem 1.88rem 0;
  position: relative;
}
.tg-checkbox input[type=checkbox], .tg-checkbox input[type=radio] {
  cursor: pointer;
  position: absolute;
  left: -2px;
  top: -2px;
  z-index: 1;
  width: 44px;
  height: 44px;
  margin: 0;
  opacity: 0;
  outline: none;
}
.tg-checkbox input[type=checkbox] ~ label, .tg-checkbox input[type=radio] ~ label {
  display: inline-block;
  position: relative;
  margin-bottom: 0;
  padding: 9px 15px 5px 56px;
  cursor: pointer;
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}
.tg-checkbox input[type=checkbox] ~ label::before, .tg-checkbox input[type=radio] ~ label::before {
  content: "";
  z-index: 0;
  position: absolute;
  left: 0;
  top: 0;
  width: 40px;
  height: 40px;
  border: 2px solid #262628;
  background: transparent;
}
.tg-checkbox input[type=checkbox]:disabled ~ label, .tg-checkbox input[type=radio]:disabled ~ label {
  color: #9e9e9e;
}
.tg-checkbox input[type=checkbox]:disabled ~ label::before, .tg-checkbox input[type=radio]:disabled ~ label::before {
  border-color: #9e9e9e;
}
.tg-checkbox input[type=checkbox]:checked ~ label::after, .tg-checkbox input[type=radio]:checked ~ label::after {
  content: "";
  position: absolute;
  top: 13px;
  left: 10.5px;
  width: 18px;
  height: 7px;
  transform: rotate(-45deg);
  border: solid;
  border-color: #262628;
  border-width: 0 0 5px 5px;
  border-top-color: transparent;
  background: transparent;
}
.tg-checkbox input[type=checkbox]:focus ~ label::before, .tg-checkbox input[type=radio]:focus ~ label::before {
  box-shadow: 0 0 0 2px inset #262628, 0 0 0 3px #eee82b;
}
.tg-checkbox input[type=radio] ~ label::before {
  border-radius: 50%;
}
.tg-checkbox input[type=radio]:checked ~ label::after {
  background: #262628;
  border-radius: 50%;
  border: none;
  transform: none;
  top: 11px;
  left: 11px;
  width: 22px;
  height: 22px;
}

/*# sourceMappingURL=style.css.map */
